- name: Ensure git repo
  apt_repository:
    repo: ppa:git-core/ppa
    state: present
  become: true

- name: Install git
  apt:
    name: git
    state: present
  become: true

- name: Ensure git XDG_CONFIG directory
  file:
    path: "{{ xdg_config_home }}/git"
    state: directory

- name: Check for existing gitconfig
  stat:
    path: "{{ user_home }}/.gitconfig"
  register: gitconfig_stat

- name: Backup gitconfig
  command: mv {{ user_home }}/.gitconfig {{ xdg_config_home }}/git/.gitconfig.bak
  args:
    creates: "{{ xdg_config_home }}/git/.gitconfig.bak"
  when: gitconfig_stat.stat.exists

- name: Check for existing XDG_CONFIG gitconfig
  stat:
    path: "{{ xdg_config_home }}/git/config"
  register: xdg_gitconfig_stat

- name: Backup XDG_CONFIG gitconfig
  command: mv {{ xdg_config_home }}/git/config {{ xdg_config_home }}/git/config.bak
  args:
    creates: "{{ xdg_config_home }}/git/config.bak"
  when: xdg_gitconfig_stat.stat.exists

- name: Ensure gitconfig is up to date
  template:
    src: "gitconfig.j2"
    dest: "{{ xdg_config_home }}/git/config"

- name: Ensure work gitconfig is up to date
  template:
    src: "workgitconfig.j2"
    dest: "{{ xdg_config_home }}/git/{{ item.name }}.config"
  loop: "{{ work_companies }}"
  when: work_companies is defined

- name: Ensure work code dir
  file:
    path: "{{ user_home }}/docs/code/work/{{ item.name }}"
    state: directory
  loop: "{{ work_companies }}"
  when: work_companies is defined
